{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","style","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","resetInput","form","preventDefault","label","input","type","autoComplete","pattern","title","onChange","required","placeholder","btn","Filter","ContactList","contacts","onDeleteContact","list","map","id","item","info","onClick","App","JSON","parse","localStorage","getItem","setContacts","useEffect","window","setItem","stringify","filter","setFilter","contact","shortid","generate","find","toLowerCase","toast","trim","test","prevContacts","sort","a","b","error","length","currentTarget","normalizedFilter","includes","getVisibleContacts","contactId","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a534c65f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={style.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n    return (\n      <form className={style.form} onSubmit={handleSubmit}>\n        <label className={style.label}>\n          Name\n          <input\n            className={style.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\n            onChange={handleChange}\n            required\n            placeholder=\"Enter name (Ivanov Ivan)\"\n          />\n        </label>\n        <label className={style.label}>\n          Phone Number\n          <input\n            className={style.input}\n            type=\"tel\"\n            autoComplete=\"off\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            onChange={handleChange}\n            required\n            placeholder=\"Enter numbe (111-11-11)\"\n          />\n        </label>\n        <button className={style.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n// import { ReactComponent as DeleteIcon } from '../../img/delete.svg';\nimport style from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={style.item} key={id}>\n          <p className={style.info}>\n            {name}: {number}\n          </p>\n          <button\n            className={style.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            {/* <DeleteIcon width=\"26\" height=\"26\" /> */}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      toast(`🤔 ${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      toast(`🤔 ${number} is already in contacts.`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      setContacts(prevContacts =>\n        [contact, ...prevContacts].sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        }),\n      );\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && <Filter value={filter} onChange={changeFilter} />}\n      {contacts.length > 0 ? (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};"],"sourceRoot":""}